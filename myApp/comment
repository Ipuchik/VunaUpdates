import React, { useState, useEffect, useRef } from "react";
import {
  ImageBackground,
  StyleSheet,
  Text,
  View,
  ScrollView,
  RefreshControl,
  KeyboardAvoidingView,
  Platform,
} from "react-native";
import Icon from "react-native-vector-icons/FontAwesome";
import { TouchableOpacity } from "react-native";
import { TextInput } from "react-native-gesture-handler";

export default function Comment({ route }) {
  const inputRef = useRef(null);
  let [post, setPost] = useState("");
  const [posts, setPosts] = useState([]); // State to store the posts
  const [refreshing, setRefreshing] = useState(false); // State to manage refreshing

  const [Tposts, setTposts] = useState(route.params.posts || []);

  const submit = () => {
    fetch("http://localhost/Project/myApp/API/postComments.php", {
      method: "POST",
      header: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        post: post,
      }),
    })
      .then((response) => response.json())
      .then((Ibrahim) => {
        if (Ibrahim.msg == "Sent successfully") {
          inputRef.current.clear();
          //alert("Sent successfully");
        } else {
          alert("please check your internet connection");
        }
      })
      .catch((error) => {
        alert(error);
      });
  };

  const fetchPosts = () => {
    fetch("http://localhost/Project/myApp/API/getComments.php")
      .then((response) => response.json())
      .then((data) => {
        if (data.msg === "Successful") {
          setPosts(data.post); // Update the posts state with fetched posts
        } else {
          alert(data.msg);
        }
      })
      .catch((error) => {
        alert(error);
      });
  };

  const handleRefresh = () => {
    setRefreshing(true); // Set refreshing state to true
    fetchPosts(); // Fetch posts
    setRefreshing(false); // Set refreshing state back to false after fetching
  };

  useEffect(() => {
    fetchPosts(); // Fetch posts when the component mounts

    const interval = setInterval(fetchPosts, 1000); // Fetch posts at regular intervals (every 10 seconds)

    return () => {
      clearInterval(interval); // Clean up the interval when the component unmounts
    };
  }, []);

  return (
    <View style={styles.container}>
      <ScrollView
        contentContainerStyle={styles.scrollContent}
        refreshControl={
          <RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />
        }
      >
        <ImageBackground
          source={require("../assets/first2.png")}
          style={styles.backgroundImage}
        >
          <View style={styles.commentsContainer}>
            {Tposts.map((post) => (
              <View style={styles.postContainer} key={post.id}>
                <Text style={styles.postText}>{post.post}</Text>
              </View>
            ))}
          </View>

          <View style={styles.commentsContainer}>
            {posts.map((post) => (
              <View style={styles.postContainer} key={post.id}>
                <Text style={styles.postText}>
                  {/* {post.id} */}
                  {post.post}
                </Text>
              </View>
            ))}
          </View>
          <View style={styles.input}>
            <KeyboardAvoidingView
              behavior={Platform.OS === "ios" ? "padding" : "height"}
            >
              <TouchableOpacity onPress={submit}>
                <Icon
                  name="send"
                  size={25}
                  color="#C48DC6"
                  style={styles.icons}
                />
              </TouchableOpacity>
              <TextInput
                style={styles.TextInput}
                multiline={true}
                onChangeText={setPost}
                ref={inputRef}
              />
            </KeyboardAvoidingView>
          </View>
          <View style={{ marginBottom: 10 }} />
          <View style={styles.contentFiller} />
        </ImageBackground>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  scrollContent: {
    flexGrow: 1,
  },
  backgroundImage: {
    flex: 1,
    width: "100%",
    height: "100%",
  },
  postText: {
    fontSize: 22,
    alignSelf: "center",
    marginVertical: 0,
    paddingLeft: 10,
    paddingRight: 10,
    marginTop: -5,
  },
  contentFiller: {
    flex: 1,
  },
  postContainer: {
    backgroundColor: "white",
    paddingHorizontal: 20,
    paddingVertical: 15,
    marginBottom: 10,
    borderWidth: 1,
    borderColor: "#DDDDDD",
    borderRadius: 20,
  },
  postContainer: {
    backgroundColor: "white",
    marginHorizontal: 20,
    marginVertical: 10,
    padding: 20,
    borderRadius: 10,
  },

  postText: {
    fontSize: 16,
    color: "#333333",
  },
  firstPostContainer: {
    marginTop: -200,
  },
  commentsContainer: {
    paddingTop: 150,
  },
  contentFiller: {
    flex: 1,
  },
  TextInput: {
    backgroundColor: "white",
    width: "80%",
    alignSelf: "center",
    height: 40,
    //position: "",
    paddingLeft: 10,
    paddingRight: 35,
    borderRadius: 20,
    justifyContent: "center",
    alignItems: "center",
    alignContent: "center",
    paddingTop: 10,
  },
  icons: {
    position: "absolute",
    alignSelf: "center",
    marginTop: 10,
    marginLeft: 240,
  },
  input: {
    marginTop: 60,
  },
});
